# decide whether we're in a Vim process
# See: https://github.com/christoomey/vim-tmux-navigator/blob/a26954a585b02a2ac02f87145e204f8798a7cbc2/vim-tmux-navigator.tmux#L1
_tmux_is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?(\\.exe)?$'"
_tmux_is_os_macos="uname -s | grep -iqE '^Darwin$'"
_tmux_is_os_windows="uname -s | grep -iqE '^Windows_NT$'"
_tmux_is_os_wsl="cat /proc/version | grep -iqE 'microsoft'"

## Copy mode
bind-key -T copy-mode-vi v    send-keys -X begin-selection
bind-key -T copy-mode-vi C-v  send-keys -X rectangle-toggle
bind-key -T copy-mode-vi h    send-keys -X cursor-left
bind-key -T copy-mode-vi l    send-keys -X cursor-right
bind-key -T copy-mode-vi k    send-keys -X cursor-up
bind-key -T copy-mode-vi j    send-keys -X cursor-down
bind-key -T copy-mode-vi e    send-keys -X next-word-end
bind-key -T copy-mode-vi K    send-keys -N 5 -X cursor-up
bind-key -T copy-mode-vi J    send-keys -N 5 -X cursor-down
bind-key -T copy-mode-vi H    send-keys -X start-of-line
bind-key -T copy-mode-vi L    send-keys -X end-of-line
bind-key -T copy-mode-vi Y    send-keys -X copy-end-of-line
bind-key -T copy-mode-vi y    send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi =    send-keys -X search-again
bind-key -T copy-mode-vi +    send-keys -X search-reverse

if-shell "$_tmux_is_os_macos" "bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'pbcopy'"
if-shell "$_tmux_is_os_wsl"  "bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'clip.exe'"

## Functions
bind-key    F11               set-option status      # Toggle status bar visibility
bind-key -n F2                command-prompt -p "Set window name:"  -I "#{window_name}"    "rename-window '%%'"      # Rename window
bind-key -n S-F2              command-prompt -p "Set session name:" -I "#{session_name}"   "rename-session '%%'"     # Rename session
bind-key -n F12               run-shell "bash ~/.config/tmux/script/popup.sh"

## Session
bind-key    D                 detach-client
bind-key    M                 command-prompt -p "Move window to session:" -I "#{session_name}" 'run-shell "bash ~/.config/tmux/script/move-window.sh '%%'"'
bind-key    N                 command-prompt -p "New session name:" -I "#{session_name}-2" "new-session -s '%%'"
bind-key    S                 choose-tree -s
bind-key    ','               run-shell "bash ~/.config/tmux/script/focus-session.sh prev"
bind-key    '.'               run-shell "bash ~/.config/tmux/script/focus-session.sh next"

## Window/Pane
bind-key    m                 command-prompt -p "Move pane to window:" -I "#{window_name}" "join-pane -t :'%%'" # Move pane to window with window number or name
bind-key    n                 command-prompt -p "New window name:" -I "#{window_name}-2" "new-window -n '%%'" # Create new window

### Focus
bind-key    k                 if-shell "$_tmux_is_vim" 'send-keys C-a k' 'select-pane -U'
bind-key    l                 if-shell "$_tmux_is_vim" 'send-keys C-a l' 'select-pane -R'
bind-key    j                 if-shell "$_tmux_is_vim" 'send-keys C-a j' 'select-pane -D'
bind-key    h                 if-shell "$_tmux_is_vim" 'send-keys C-a h' 'select-pane -L'
bind-key    1                 select-window -t 1
bind-key    2                 select-window -t 2
bind-key    3                 select-window -t 3
bind-key    4                 select-window -t 4
bind-key    5                 select-window -t 5
bind-key    6                 select-window -t 6
bind-key    7                 select-window -t 7
bind-key    8                 select-window -t 8
bind-key    9                 select-window -t 9
bind-key    0                 select-window -t 10
bind-key    '['               previous-window
bind-key    ']'               next-window

### Kill
bind-key    O                 kill-window -a                              # Close other window.
bind-key    W                 kill-window                                 # Close window.
bind-key    w                 kill-pane                                   # Close pane.

### Resize
bind-key -r Up                resize-pane -U 1
bind-key -r Right             resize-pane -R 1
bind-key -r Down              resize-pane -D 1
bind-key -r Left              resize-pane -L 1
bind-key    z                 resize-pane -Z
bind-key    C-z               resize-pane -Z

### Split
bind-key    C-l               split-window -h -c '#{pane_current_path}'   # Split Vertical a new pane will created right of current pane with current directory.
bind-key    C-j               split-window -v -c '#{pane_current_path}'   # Split horizontal, a new pane will created below of current pane with current directory.

### Swap
bind-key    K                 swap-pane     -t '{up-of}'      \; select-pane -t '{down-of}'
bind-key    L                 swap-pane     -t '{right-of}'   \; select-pane -t '{left-of}'
bind-key    J                 swap-pane     -t '{down-of}'    \; select-pane -t '{up-of}'
bind-key    H                 swap-pane     -t '{left-of}'    \; select-pane -t '{right-of}'
bind-key    '{'               swap-window   -t -1             \; previous-window
bind-key    '}'               swap-window   -t +1             \; next-window
bind-key    C-Right           select-layout "even-horizontal"
bind-key    C-Down            select-layout "even-vertical"

## Misc
bind-key    T                 if-shell "$_tmux_is_vim" 'run-shell "tmux send-keys C-a T; bash ~/.config/tmux/script/toggle-theme.sh"' 'run-shell "bash ~/.config/tmux/script/toggle-theme.sh"'
bind-key    c                 if-shell "$_tmux_is_vim" 'send-keys C-a c' copy-mode
bind-key    g                 if-shell "$_tmux_is_vim" 'send-keys C-a g' 'display-popup -d "#{pane_current_path}" -w80% -h80% -E lazygit'  # Display lazygit
bind-key    o                 if-shell "$_tmux_is_vim" 'send-keys C-a o' 'run-shell "open #{pane_current_path}"'       # open current path in finder.
bind-key    r                 if-shell "$_tmux_is_vim" 'send-keys C-a r' "run-shell 'tmux source-file ~/.config/tmux/tmux.conf; tmux display-message \"Config reloaded..\"'"
bind-key    t                 if-shell "$_tmux_is_vim" 'send-keys C-a t' 'run-shell "bash ~/.config/tmux/script/popup.sh"'
bind-key    :                 command-prompt -p ":" "send-keys ':' Enter"

