# decide whether we're in a Vim process
# See: https://github.com/christoomey/vim-tmux-navigator/blob/a26954a585b02a2ac02f87145e204f8798a7cbc2/vim-tmux-navigator.tmux#L1
_tmux_is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

## Reload tmux configuration
## Copy mode
bind-key -T copy-mode-vi v    send-keys -X begin-selection
bind-key -T copy-mode-vi C-v  send-keys -X rectangle-toggle
bind-key -T copy-mode-vi h    send-keys -X cursor-left
bind-key -T copy-mode-vi l    send-keys -X cursor-right
bind-key -T copy-mode-vi k    send-keys -X cursor-up
bind-key -T copy-mode-vi j    send-keys -X cursor-down
bind-key -T copy-mode-vi e    send-keys -X next-word-end
bind-key -T copy-mode-vi K    send-keys -N 5 -X cursor-up
bind-key -T copy-mode-vi J    send-keys -N 5 -X cursor-down
bind-key -T copy-mode-vi H    send-keys -X start-of-line
bind-key -T copy-mode-vi L    send-keys -X end-of-line
bind-key -T copy-mode-vi Y    send-keys -X copy-end-of-line
bind-key -T copy-mode-vi y    send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi =    send-keys -X search-again
bind-key -T copy-mode-vi +    send-keys -X search-reverse

## Status bar
bind-key -n M-F11                 set-option status      # Toggle status bar visibility


## Session / window / pane

bind-key -n M-D                   detach-client
bind-key -n M-S                   choose-tree -Z

### Rename
bind-key -n S-F2                  command-prompt -p "Set session name:" "rename-session '%%'"     # Rename session
bind-key -n F2                    command-prompt -p "Set window name:"  "rename-window '%%'"      # Rename window

### Create
bind-key -n M-C-n                 new-window                                                      # Create a new window.
bind-key -n M-C-l                 split-window -h -c '#{pane_current_path}'                       # 水平方向新增面板，默认进入当前目录
bind-key -n M-C-j                 split-window -v -c '#{pane_current_path}'                       # 垂直方向新增面板，默认进入当前目录

### Join
bind-key -n M-C-b                 command-prompt -p "Move pane to window-?:" "join-pane -t :'%%'" # Move pane to window with window number or name

### Kill
bind-key -n M-C-o                 kill-window -a    # Close other window.
bind-key -n M-C-w                 kill-window       # Close window.
bind-key -n M-C-p                 kill-pane         # Close pane.

### Resize
bind-key -r -n M-C-Up             resize-pane -U 1
bind-key -r -n M-C-Right          resize-pane -R 1
bind-key -r -n M-C-Down           resize-pane -D 1
bind-key -r -n M-C-Left           resize-pane -L 1
bind-key -r -n M-C-z              resize-pane -Z

### Swap
bind-key -n M-K                   swap-pane     -t '{up-of}'      \; select-pane -t '{down-of}'
bind-key -n M-L                   swap-pane     -t '{right-of}'   \; select-pane -t '{left-of}'
bind-key -n M-J                   swap-pane     -t '{down-of}'    \; select-pane -t '{up-of}'
bind-key -n M-H                   swap-pane     -t '{left-of}'    \; select-pane -t '{right-of}'
bind-key -n M-'{'                 swap-window   -t -1             \; previous-window
bind-key -n M-'}'                 swap-window   -t +1             \; next-window
bind-key -n M-<                   select-layout "even-vertical"
bind-key -n M->                   select-layout "even-horizontal"

### Focus
bind-key -n M-1                   select-window -t 1
bind-key -n M-2                   select-window -t 2
bind-key -n M-3                   select-window -t 3
bind-key -n M-4                   select-window -t 4
bind-key -n M-5                   select-window -t 5
bind-key -n M-6                   select-window -t 6
bind-key -n M-7                   select-window -t 7
bind-key -n M-8                   select-window -t 8
bind-key -n M-9                   select-window -t 9
bind-key -n M-0                   select-window -t 10
bind-key -n M-'['                 previous-window
bind-key -n M-']'                 next-window
bind-key -n M-k                   if-shell "$_tmux_is_vim" 'send-keys M-b k' 'select-pane -U'
bind-key -n M-l                   if-shell "$_tmux_is_vim" 'send-keys M-b l' 'select-pane -R'
bind-key -n M-j                   if-shell "$_tmux_is_vim" 'send-keys M-b j' 'select-pane -D'
bind-key -n M-h                   if-shell "$_tmux_is_vim" 'send-keys M-b h' 'select-pane -L'

## Misc
bind-key    -n M-c                copy-mode
bind-key -r -n M-g                display-popup -d '#{pane_current_path}' -w80% -h80% -E lazygit  # Display lazygit
bind-key    -n M-o                run-shell "open #{pane_current_path}"       # open current path in finder.
bind-key    -n M-r                source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded.."
bind-key    -n M-t                run-shell "bash ~/.config/tmux/script/popup.sh"
bind-key    -n M-:                command-prompt -p ":" "send-keys ':' Enter"

